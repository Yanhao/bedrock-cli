// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.24.3
// source: proxy.proto

package proxy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxStatus int32

const (
	TxStatus_START    TxStatus = 0
	TxStatus_FINISHED TxStatus = 1
)

// Enum value maps for TxStatus.
var (
	TxStatus_name = map[int32]string{
		0: "START",
		1: "FINISHED",
	}
	TxStatus_value = map[string]int32{
		"START":    0,
		"FINISHED": 1,
	}
)

func (x TxStatus) Enum() *TxStatus {
	p := new(TxStatus)
	*p = x
	return p
}

func (x TxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_proto_enumTypes[0].Descriptor()
}

func (TxStatus) Type() protoreflect.EnumType {
	return &file_proxy_proto_enumTypes[0]
}

func (x TxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxStatus.Descriptor instead.
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{0}
}

type TxLockType int32

const (
	TxLockType_SHARED    TxLockType = 0
	TxLockType_EXCLUSIVE TxLockType = 1
)

// Enum value maps for TxLockType.
var (
	TxLockType_name = map[int32]string{
		0: "SHARED",
		1: "EXCLUSIVE",
	}
	TxLockType_value = map[string]int32{
		"SHARED":    0,
		"EXCLUSIVE": 1,
	}
)

func (x TxLockType) Enum() *TxLockType {
	p := new(TxLockType)
	*p = x
	return p
}

func (x TxLockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxLockType) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_proto_enumTypes[1].Descriptor()
}

func (TxLockType) Type() protoreflect.EnumType {
	return &file_proxy_proto_enumTypes[1]
}

func (x TxLockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxLockType.Descriptor instead.
func (TxLockType) EnumDescriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{1}
}

type Error int32

const (
	Error_OK                 Error = 0
	Error_NO_SUCH_KEY        Error = 1
	Error_INVLIAD_PARAMETERS Error = 2
	Error_UNKNOWN            Error = 255
)

// Enum value maps for Error.
var (
	Error_name = map[int32]string{
		0:   "OK",
		1:   "NO_SUCH_KEY",
		2:   "INVLIAD_PARAMETERS",
		255: "UNKNOWN",
	}
	Error_value = map[string]int32{
		"OK":                 0,
		"NO_SUCH_KEY":        1,
		"INVLIAD_PARAMETERS": 2,
		"UNKNOWN":            255,
	}
)

func (x Error) Enum() *Error {
	p := new(Error)
	*p = x
	return p
}

func (x Error) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_proto_enumTypes[2].Descriptor()
}

func (Error) Type() protoreflect.EnumType {
	return &file_proxy_proto_enumTypes[2]
}

func (x Error) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error.Descriptor instead.
func (Error) EnumDescriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{2}
}

type PredicateOp int32

const (
	PredicateOp_EQUAL     PredicateOp = 0
	PredicateOp_NOT_EQUAL PredicateOp = 1
)

// Enum value maps for PredicateOp.
var (
	PredicateOp_name = map[int32]string{
		0: "EQUAL",
		1: "NOT_EQUAL",
	}
	PredicateOp_value = map[string]int32{
		"EQUAL":     0,
		"NOT_EQUAL": 1,
	}
)

func (x PredicateOp) Enum() *PredicateOp {
	p := new(PredicateOp)
	*p = x
	return p
}

func (x PredicateOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PredicateOp) Descriptor() protoreflect.EnumDescriptor {
	return file_proxy_proto_enumTypes[3].Descriptor()
}

func (PredicateOp) Type() protoreflect.EnumType {
	return &file_proxy_proto_enumTypes[3]
}

func (x PredicateOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PredicateOp.Descriptor instead.
func (PredicateOp) EnumDescriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{3}
}

type TxRecordLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockType TxLockType `protobuf:"varint,1,opt,name=lock_type,json=lockType,proto3,enum=bedrock.proxy.TxLockType" json:"lock_type,omitempty"`
	Key      []byte     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *TxRecordLock) Reset() {
	*x = TxRecordLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRecordLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRecordLock) ProtoMessage() {}

func (x *TxRecordLock) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRecordLock.ProtoReflect.Descriptor instead.
func (*TxRecordLock) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *TxRecordLock) GetLockType() TxLockType {
	if x != nil {
		return x.LockType
	}
	return TxLockType_SHARED
}

func (x *TxRecordLock) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type TxRangeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockType TxLockType `protobuf:"varint,1,opt,name=lock_type,json=lockType,proto3,enum=bedrock.proxy.TxLockType" json:"lock_type,omitempty"`
	StartKey []byte     `protobuf:"bytes,2,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey   []byte     `protobuf:"bytes,3,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
}

func (x *TxRangeLock) Reset() {
	*x = TxRangeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRangeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRangeLock) ProtoMessage() {}

func (x *TxRangeLock) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRangeLock.ProtoReflect.Descriptor instead.
func (*TxRangeLock) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *TxRangeLock) GetLockType() TxLockType {
	if x != nil {
		return x.LockType
	}
	return TxLockType_SHARED
}

func (x *TxRangeLock) GetStartKey() []byte {
	if x != nil {
		return x.StartKey
	}
	return nil
}

func (x *TxRangeLock) GetEndKey() []byte {
	if x != nil {
		return x.EndKey
	}
	return nil
}

type TxRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId   uint32          `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	TxId        uint64          `protobuf:"varint,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Status      TxStatus        `protobuf:"varint,3,opt,name=status,proto3,enum=bedrock.proxy.TxStatus" json:"status,omitempty"`
	HeartbeatTs uint64          `protobuf:"varint,4,opt,name=heartbeat_ts,json=heartbeatTs,proto3" json:"heartbeat_ts,omitempty"`
	RecordLocks []*TxRecordLock `protobuf:"bytes,5,rep,name=record_locks,json=recordLocks,proto3" json:"record_locks,omitempty"`
	RangeLocks  []*TxRangeLock  `protobuf:"bytes,6,rep,name=range_locks,json=rangeLocks,proto3" json:"range_locks,omitempty"`
}

func (x *TxRecord) Reset() {
	*x = TxRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRecord) ProtoMessage() {}

func (x *TxRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRecord.ProtoReflect.Descriptor instead.
func (*TxRecord) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{2}
}

func (x *TxRecord) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *TxRecord) GetTxId() uint64 {
	if x != nil {
		return x.TxId
	}
	return 0
}

func (x *TxRecord) GetStatus() TxStatus {
	if x != nil {
		return x.Status
	}
	return TxStatus_START
}

func (x *TxRecord) GetHeartbeatTs() uint64 {
	if x != nil {
		return x.HeartbeatTs
	}
	return 0
}

func (x *TxRecord) GetRecordLocks() []*TxRecordLock {
	if x != nil {
		return x.RecordLocks
	}
	return nil
}

func (x *TxRecord) GetRangeLocks() []*TxRangeLock {
	if x != nil {
		return x.RangeLocks
	}
	return nil
}

type KvGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId  uint32 `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Key        []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	ReadLatest []byte `protobuf:"bytes,3,opt,name=read_latest,json=readLatest,proto3" json:"read_latest,omitempty"`
}

func (x *KvGetRequest) Reset() {
	*x = KvGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvGetRequest) ProtoMessage() {}

func (x *KvGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvGetRequest.ProtoReflect.Descriptor instead.
func (*KvGetRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{3}
}

func (x *KvGetRequest) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *KvGetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KvGetRequest) GetReadLatest() []byte {
	if x != nil {
		return x.ReadLatest
	}
	return nil
}

type KvGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Err   Error  `protobuf:"varint,255,opt,name=err,proto3,enum=bedrock.proxy.Error" json:"err,omitempty"`
}

func (x *KvGetResponse) Reset() {
	*x = KvGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvGetResponse) ProtoMessage() {}

func (x *KvGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvGetResponse.ProtoReflect.Descriptor instead.
func (*KvGetResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{4}
}

func (x *KvGetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KvGetResponse) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_OK
}

type KvSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId uint32 `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Key       []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KvSetRequest) Reset() {
	*x = KvSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvSetRequest) ProtoMessage() {}

func (x *KvSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvSetRequest.ProtoReflect.Descriptor instead.
func (*KvSetRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{5}
}

func (x *KvSetRequest) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *KvSetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KvSetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type KvSetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err Error `protobuf:"varint,255,opt,name=err,proto3,enum=bedrock.proxy.Error" json:"err,omitempty"`
}

func (x *KvSetResponse) Reset() {
	*x = KvSetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvSetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvSetResponse) ProtoMessage() {}

func (x *KvSetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvSetResponse.ProtoReflect.Descriptor instead.
func (*KvSetResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{6}
}

func (x *KvSetResponse) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_OK
}

type KvDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId uint32 `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Key       []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KvDeleteRequest) Reset() {
	*x = KvDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvDeleteRequest) ProtoMessage() {}

func (x *KvDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvDeleteRequest.ProtoReflect.Descriptor instead.
func (*KvDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{7}
}

func (x *KvDeleteRequest) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *KvDeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type KvDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err Error `protobuf:"varint,255,opt,name=err,proto3,enum=bedrock.proxy.Error" json:"err,omitempty"`
}

func (x *KvDeleteResponse) Reset() {
	*x = KvDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvDeleteResponse) ProtoMessage() {}

func (x *KvDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvDeleteResponse.ProtoReflect.Descriptor instead.
func (*KvDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{8}
}

func (x *KvDeleteResponse) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_OK
}

type KvScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId uint32 `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Prefix    []byte `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Limit     uint32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *KvScanRequest) Reset() {
	*x = KvScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvScanRequest) ProtoMessage() {}

func (x *KvScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvScanRequest.ProtoReflect.Descriptor instead.
func (*KvScanRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{9}
}

func (x *KvScanRequest) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *KvScanRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *KvScanRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type KeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{10}
}

func (x *KeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type KvScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kvs []*KeyValue `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
	Err Error       `protobuf:"varint,255,opt,name=err,proto3,enum=bedrock.proxy.Error" json:"err,omitempty"`
}

func (x *KvScanResponse) Reset() {
	*x = KvScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KvScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KvScanResponse) ProtoMessage() {}

func (x *KvScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KvScanResponse.ProtoReflect.Descriptor instead.
func (*KvScanResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{11}
}

func (x *KvScanResponse) GetKvs() []*KeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *KvScanResponse) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_OK
}

type Predicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Op    PredicateOp `protobuf:"varint,3,opt,name=op,proto3,enum=bedrock.proxy.PredicateOp" json:"op,omitempty"`
}

func (x *Predicate) Reset() {
	*x = Predicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Predicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Predicate) ProtoMessage() {}

func (x *Predicate) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Predicate.ProtoReflect.Descriptor instead.
func (*Predicate) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{12}
}

func (x *Predicate) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Predicate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Predicate) GetOp() PredicateOp {
	if x != nil {
		return x.Op
	}
	return PredicateOp_EQUAL
}

type BatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorageId  uint32       `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Kvs        []*KeyValue  `protobuf:"bytes,2,rep,name=kvs,proto3" json:"kvs,omitempty"`
	Predicates []*Predicate `protobuf:"bytes,3,rep,name=predicates,proto3" json:"predicates,omitempty"`
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{13}
}

func (x *BatchRequest) GetStorageId() uint32 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *BatchRequest) GetKvs() []*KeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *BatchRequest) GetPredicates() []*Predicate {
	if x != nil {
		return x.Predicates
	}
	return nil
}

type BatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err Error `protobuf:"varint,255,opt,name=err,proto3,enum=bedrock.proxy.Error" json:"err,omitempty"`
}

func (x *BatchResponse) Reset() {
	*x = BatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proxy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResponse) ProtoMessage() {}

func (x *BatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proxy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResponse.ProtoReflect.Descriptor instead.
func (*BatchResponse) Descriptor() ([]byte, []int) {
	return file_proxy_proto_rawDescGZIP(), []int{14}
}

func (x *BatchResponse) GetErr() Error {
	if x != nil {
		return x.Err
	}
	return Error_OK
}

var File_proxy_proto protoreflect.FileDescriptor

var file_proxy_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x22, 0x58, 0x0a, 0x0c,
	0x54, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x09,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x54, 0x78, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x7b, 0x0a, 0x0b, 0x54, 0x78, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x36, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x78, 0x4c, 0x6f, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x65, 0x6e, 0x64,
	0x4b, 0x65, 0x79, 0x22, 0x8f, 0x02, 0x0a, 0x08, 0x54, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x5f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x68, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x54, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x54, 0x78,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x60, 0x0a, 0x0c, 0x4b, 0x76, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x65, 0x61,
	0x64, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x0d, 0x4b, 0x76, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x55, 0x0a, 0x0c, 0x4b, 0x76, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x38,
	0x0a, 0x0d, 0x4b, 0x76, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x42, 0x0a, 0x0f, 0x4b, 0x76, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3b, 0x0a, 0x10,
	0x4b, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x5c, 0x0a, 0x0d, 0x4b, 0x76, 0x53,
	0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x64, 0x0a, 0x0e, 0x4b,
	0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a,
	0x03, 0x6b, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x12, 0x27, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x22, 0x5f, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x52, 0x02,
	0x6f, 0x70, 0x22, 0x92, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x29, 0x0a, 0x03, 0x6b, 0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0xff, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x2a, 0x23, 0x0a, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a,
	0x05, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x27, 0x0a, 0x0a, 0x54, 0x78, 0x4c, 0x6f, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x41, 0x52, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x43, 0x4c, 0x55, 0x53, 0x49, 0x56, 0x45, 0x10, 0x01, 0x2a,
	0x46, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x53, 0x55, 0x43, 0x48, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x4c, 0x49, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x52,
	0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x53, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xff, 0x01, 0x2a, 0x27, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x01,
	0x32, 0xf0, 0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x05, 0x4b, 0x76, 0x53, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x76, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x76, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x4b, 0x76, 0x47, 0x65, 0x74, 0x12, 0x1b,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b,
	0x76, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x76, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x4b, 0x76, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b, 0x76, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x4b, 0x76, 0x53, 0x63, 0x61, 0x6e,
	0x12, 0x1c, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x4b, 0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x4b,
	0x76, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x42, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x59, 0x61, 0x6e, 0x68, 0x61, 0x6f, 0x2f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proxy_proto_rawDescOnce sync.Once
	file_proxy_proto_rawDescData = file_proxy_proto_rawDesc
)

func file_proxy_proto_rawDescGZIP() []byte {
	file_proxy_proto_rawDescOnce.Do(func() {
		file_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(file_proxy_proto_rawDescData)
	})
	return file_proxy_proto_rawDescData
}

var file_proxy_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proxy_proto_goTypes = []interface{}{
	(TxStatus)(0),            // 0: bedrock.proxy.TxStatus
	(TxLockType)(0),          // 1: bedrock.proxy.TxLockType
	(Error)(0),               // 2: bedrock.proxy.Error
	(PredicateOp)(0),         // 3: bedrock.proxy.PredicateOp
	(*TxRecordLock)(nil),     // 4: bedrock.proxy.TxRecordLock
	(*TxRangeLock)(nil),      // 5: bedrock.proxy.TxRangeLock
	(*TxRecord)(nil),         // 6: bedrock.proxy.TxRecord
	(*KvGetRequest)(nil),     // 7: bedrock.proxy.KvGetRequest
	(*KvGetResponse)(nil),    // 8: bedrock.proxy.KvGetResponse
	(*KvSetRequest)(nil),     // 9: bedrock.proxy.KvSetRequest
	(*KvSetResponse)(nil),    // 10: bedrock.proxy.KvSetResponse
	(*KvDeleteRequest)(nil),  // 11: bedrock.proxy.KvDeleteRequest
	(*KvDeleteResponse)(nil), // 12: bedrock.proxy.KvDeleteResponse
	(*KvScanRequest)(nil),    // 13: bedrock.proxy.KvScanRequest
	(*KeyValue)(nil),         // 14: bedrock.proxy.KeyValue
	(*KvScanResponse)(nil),   // 15: bedrock.proxy.KvScanResponse
	(*Predicate)(nil),        // 16: bedrock.proxy.Predicate
	(*BatchRequest)(nil),     // 17: bedrock.proxy.BatchRequest
	(*BatchResponse)(nil),    // 18: bedrock.proxy.BatchResponse
}
var file_proxy_proto_depIdxs = []int32{
	1,  // 0: bedrock.proxy.TxRecordLock.lock_type:type_name -> bedrock.proxy.TxLockType
	1,  // 1: bedrock.proxy.TxRangeLock.lock_type:type_name -> bedrock.proxy.TxLockType
	0,  // 2: bedrock.proxy.TxRecord.status:type_name -> bedrock.proxy.TxStatus
	4,  // 3: bedrock.proxy.TxRecord.record_locks:type_name -> bedrock.proxy.TxRecordLock
	5,  // 4: bedrock.proxy.TxRecord.range_locks:type_name -> bedrock.proxy.TxRangeLock
	2,  // 5: bedrock.proxy.KvGetResponse.err:type_name -> bedrock.proxy.Error
	2,  // 6: bedrock.proxy.KvSetResponse.err:type_name -> bedrock.proxy.Error
	2,  // 7: bedrock.proxy.KvDeleteResponse.err:type_name -> bedrock.proxy.Error
	14, // 8: bedrock.proxy.KvScanResponse.kvs:type_name -> bedrock.proxy.KeyValue
	2,  // 9: bedrock.proxy.KvScanResponse.err:type_name -> bedrock.proxy.Error
	3,  // 10: bedrock.proxy.Predicate.op:type_name -> bedrock.proxy.PredicateOp
	14, // 11: bedrock.proxy.BatchRequest.kvs:type_name -> bedrock.proxy.KeyValue
	16, // 12: bedrock.proxy.BatchRequest.predicates:type_name -> bedrock.proxy.Predicate
	2,  // 13: bedrock.proxy.BatchResponse.err:type_name -> bedrock.proxy.Error
	9,  // 14: bedrock.proxy.ProxyService.KvSet:input_type -> bedrock.proxy.KvSetRequest
	7,  // 15: bedrock.proxy.ProxyService.KvGet:input_type -> bedrock.proxy.KvGetRequest
	11, // 16: bedrock.proxy.ProxyService.KvDelete:input_type -> bedrock.proxy.KvDeleteRequest
	13, // 17: bedrock.proxy.ProxyService.KvScan:input_type -> bedrock.proxy.KvScanRequest
	17, // 18: bedrock.proxy.ProxyService.Batch:input_type -> bedrock.proxy.BatchRequest
	10, // 19: bedrock.proxy.ProxyService.KvSet:output_type -> bedrock.proxy.KvSetResponse
	8,  // 20: bedrock.proxy.ProxyService.KvGet:output_type -> bedrock.proxy.KvGetResponse
	12, // 21: bedrock.proxy.ProxyService.KvDelete:output_type -> bedrock.proxy.KvDeleteResponse
	15, // 22: bedrock.proxy.ProxyService.KvScan:output_type -> bedrock.proxy.KvScanResponse
	18, // 23: bedrock.proxy.ProxyService.Batch:output_type -> bedrock.proxy.BatchResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proxy_proto_init() }
func file_proxy_proto_init() {
	if File_proxy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proxy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRecordLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRangeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvSetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KvScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Predicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proxy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proxy_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proxy_proto_goTypes,
		DependencyIndexes: file_proxy_proto_depIdxs,
		EnumInfos:         file_proxy_proto_enumTypes,
		MessageInfos:      file_proxy_proto_msgTypes,
	}.Build()
	File_proxy_proto = out.File
	file_proxy_proto_rawDesc = nil
	file_proxy_proto_goTypes = nil
	file_proxy_proto_depIdxs = nil
}
